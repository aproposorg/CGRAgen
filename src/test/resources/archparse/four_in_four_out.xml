<CGRA>
  <!-- Declare a simple PE with four inputs and four outputs. Inputs and outputs are
        numbered as follows: 0 = north, 1 = east, 2 = south, and 3 = west. -->
  <template name="simplePE">
    <input  name="in0"/>  <input  name="in1"/>  <input  name="in2"/>  <input  name="in3"/>
    <output name="out0"/> <output name="out1"/> <output name="out2"/> <output name="out3"/>
    <inst name="rgstr" module="Register"/>
    <inst name="alu" module="FuncUnit" ops="add mul and or xor"/>
    <inst name="const" module="ConstUnit" size="16"/>
    <connection from="alu.out" to="rgstr.in"/>
    <connection select-from="this.in0 this.in1 this.in2 this.in3 rgstr.out const.out" to="alu.in_a"/>
    <connection select-from="this.in0 this.in1 this.in2 this.in3 rgstr.out const.out" to="alu.in_b"/>
    <connection from="rgstr.out" distribute-to="this.out0 this.out1 this.out2 this.out3"/>
  </template>

  <!-- Declare a simple 2x2 architecture with mesh-connected PEs -->
  <architecture row="2" col="2">
    <!-- Instantiating PEs -->
    <pattern row-range="0 1" col-range="0 1">
      <block module="simplePE"/>
    </pattern>

    <!-- Vertical connections -->
    <pattern row-range="0 0" col-range="0 1">
      <connection from="(rel 0 0).out2" to="(rel 1 0).in0"/>
      <connection from="(rel 1 0).out0" to="(rel 0 0).in2"/>
    </pattern>

    <!-- Horizontal connections -->
    <pattern row-range="0 1" col-range="0 1" wrap-col="1">
      <connection from="(rel 0 0).out1" to="(rel 0 1).in3"/>
      <connection from="(rel 0 1).out3" to="(rel 0 0).in1"/>
    </pattern>
  </architecture>
</CGRA>